group 'DS'
version '1.0'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = 1.8

sourceSets.main.java.srcDirs = ['src']


repositories {
    mavenCentral()
}


jar {
    baseName = "ds-gradle"
    version = "1.0"
}



task gs(type: JavaExec) {
    main = 'distributed.systems.gridscheduler.RemoteGridSchedulerImpl'
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("argv") ) {
        args = Eval.me(argv)
    }
}

task rm(type: JavaExec) {
    main = 'distributed.systems.gridscheduler.RemoteResourceManagerImpl'
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("argv") ) {
        args = Eval.me(argv)
    }
}

task client(type: JavaExec) {
    main = 'distributed.systems.gridscheduler.Client'
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("argv") ) {
        args = Eval.me(argv)
    }
}

task mc(type: JavaExec) {
    main = 'distributed.systems.gridscheduler.MultiClient'
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("argv") ) {
        args = Eval.me(argv)
    }
}

task frontend(type: JavaExec) {
    main = 'distributed.systems.gridscheduler.Frontend'
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("argv") ) {
        args = Eval.me(argv)
    }
}

task registry(type: JavaExec) {
    main = 'distributed.systems.gridscheduler.RegistryHost'
    classpath = sourceSets.main.runtimeClasspath

    if ( project.hasProperty("argv") ) {
        args = Eval.me(argv)
    }
}
