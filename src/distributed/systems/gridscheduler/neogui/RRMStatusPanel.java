/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package distributed.systems.gridscheduler.neogui;

/**
 *
 * @author Glenn
 */
public class RRMStatusPanel extends javax.swing.JPanel {

    private final RRMStatusPanelData data;

    public RRMStatusPanel(RRMStatusPanelData data) {
        this.data = data;
        initComponents();
    }

    @Override
    public void revalidate() {
        System.out.println("Revalidating");
        updateValues();
        super.revalidate();
    }

    private void updateValues() {
        if (data != null) {
            nameValue.setText(data.getNameValue());
            countValue.setText(data.getNodeCountValue());
            loadValue.setText(data.getLoadValue());
            availableValue.setText(data.getAvailableValue());
            queueValue.setText(data.getQueueValue());
            queueBar.setMaximum(data.getQueueLimit());
            queueBar.setValue(data.getQueueSize());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JLabel();
        nameValue = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        countLabel = new javax.swing.JLabel();
        countValue = new javax.swing.JLabel();
        loadLabel = new javax.swing.JLabel();
        loadValue = new javax.swing.JLabel();
        availableLabel = new javax.swing.JLabel();
        availableValue = new javax.swing.JLabel();
        queueLabel = new javax.swing.JLabel();
        queueValue = new javax.swing.JLabel();
        queueBar = new javax.swing.JProgressBar();
        overviewLabel = new javax.swing.JLabel();
        overviewPanel = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();

        setMinimumSize(new java.awt.Dimension(200, 100));

        header.setText("Resource Manager");

        nameValue.setText(data.getNameValue());

        countLabel.setText("Node Count");

        countValue.setText(data.getNodeCountValue());

        loadLabel.setText("Load");

        loadValue.setText(data.getLoadValue());

        availableLabel.setText("Available");

        availableValue.setText(data.getAvailableValue());

        queueLabel.setText("Queue");

        queueValue.setText(data.getQueueValue());

        queueBar.setMaximum(data.getQueueLimit());
        queueBar.setValue(data.getQueueSize());

        overviewLabel.setText("Node Overview");

        javax.swing.GroupLayout overviewPanelLayout = new javax.swing.GroupLayout(overviewPanel);
        overviewPanel.setLayout(overviewPanelLayout);
        overviewPanelLayout.setHorizontalGroup(
            overviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        overviewPanelLayout.setVerticalGroup(
            overviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 73, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(overviewPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(queueBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(header)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameValue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(countLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(countValue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loadValue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(availableLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(availableValue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(overviewLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(queueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(queueValue)))
                .addContainerGap())
            .addComponent(jSeparator2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(header)
                    .addComponent(nameValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countLabel)
                    .addComponent(countValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadLabel)
                    .addComponent(loadValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(availableLabel)
                    .addComponent(availableValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queueLabel)
                    .addComponent(queueValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(queueBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(overviewLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(overviewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel availableLabel;
    private javax.swing.JLabel availableValue;
    private javax.swing.JLabel countLabel;
    private javax.swing.JLabel countValue;
    private javax.swing.JLabel header;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel loadLabel;
    private javax.swing.JLabel loadValue;
    private javax.swing.JLabel nameValue;
    private javax.swing.JLabel overviewLabel;
    private javax.swing.JPanel overviewPanel;
    private javax.swing.JProgressBar queueBar;
    private javax.swing.JLabel queueLabel;
    private javax.swing.JLabel queueValue;
    // End of variables declaration//GEN-END:variables
}
